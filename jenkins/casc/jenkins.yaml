jenkins:
  systemMessage: "Jenkins configured using Configuration as Code"
  numExecutors: 2
  mode: NORMAL
  
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: ${JENKINS_ADMIN_USER}
          password: ${JENKINS_ADMIN_PASSWORD}
  
  authorizationStrategy:
    projectMatrix:
      permissions:
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
  
  clouds:
    - docker:
        name: "docker-cloud"
        dockerApi:
          dockerHost:
            uri: "tcp://host.docker.internal:2375"
            credentialsId: "none"
        templates:
          - labelString: "docker-agent"
            dockerTemplateBase:
              image: "jenkins/inbound-agent:latest"
              environmentsString: |
                DOCKER_HOST=tcp://host.docker.internal:2375
              privileged: true
            connector:
              attach:
                user: "root"
            instanceCapStr: "10"


jobs:
  - script: |
      pipelineJob('k8s-deployment') {
        definition {
          cps {
            sandbox(true)
            script('''
              pipeline {
                agent {
                  label 'docker-agent'
                }
                environment {
                  KUBECONFIG = '/var/jenkins_home/.kube/config'
                  DOCKER_HOST = 'tcp://host.docker.internal:2375'
                }
                stages {
                  stage('Setup Environment') {
                    steps {
                      sh """
                        set -x
                        apt-get update
                        apt-get install -y wget curl
                      """
                    }
                  }
                  stage('Install k3s') {
                    steps {
                      sh """
                        set -x
                        # Download k3s binary directly
                        curl -sfL https://github.com/k3s-io/k3s/releases/latest/download/k3s -o /usr/local/bin/k3s
                        chmod +x /usr/local/bin/k3s
                        # Start k3s server without systemd or openrc
                        k3s server --disable-agent &
                        sleep 30
                        k3s kubectl get nodes
                      """
                    }
                  }
                  stage('Deploy Sample App') {
                    steps {
                      sh """
                        set -x
                        k3s kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4
                      """
                    }
                  }
                  stage('Expose Sample App') {
                    steps {
                      sh """
                        set -x
                        k3s kubectl expose deployment hello-node --type=NodePort --port=8080
                        sleep 30
                        k3s kubectl get svc hello-node
                      """
                    }
                  }
                }
              }
            ''')
          }
        }
      }